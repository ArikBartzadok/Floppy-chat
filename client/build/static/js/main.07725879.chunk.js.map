{"version":3,"sources":["Chat.js","App.js","index.js"],"names":["myId","uuid","socket","io","on","console","log","Chat","useState","message","updateMessage","messages","updateMessages","useEffect","handleNewMessage","newMessage","off","className","map","m","index","id","key","onSubmit","event","preventDefault","trim","emit","onChange","target","value","placeholder","type","App","ReactDOM","render","document","getElementById"],"mappings":"4SAIMA,E,MAAOC,KACPC,EAASC,IAAG,yBAClBD,EAAOE,GAAG,WAAW,kBAAMC,QAAQC,IAAI,4DAEvC,IAoDeC,EApDF,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACRC,EADQ,KACCC,EADD,OAEoBF,mBAAS,IAF7B,mBAERG,EAFQ,KAEEC,EAFF,KAIfC,qBAAU,WACN,IAAMC,EAAmB,SAAAC,GAAU,OAC/BH,EAAe,GAAD,mBAAKD,GAAL,CAAeI,MAEjC,OADAb,EAAOE,GAAG,eAAgBU,GACnB,kBAAMZ,EAAOc,IAAI,eAAgBF,MACzC,CAACH,IAgBJ,OACI,0BAAMM,UAAU,aACZ,wBAAIA,UAAU,QACRN,EAASO,KAAI,SAACC,EAAGC,GAAJ,OACX,wBACIH,UAAS,iCAA4BE,EAAEE,KAAOrB,EAAO,OAAS,SAC9DsB,IAAKF,GAEL,0BAAMH,UAAS,2BAAsBE,EAAEE,KAAOrB,EAAO,OAAS,UACxDmB,EAAEV,cAKpB,0BAAMQ,UAAU,OAAOM,SA5BN,SAAAC,GACrBA,EAAMC,iBACFhB,EAAQiB,SACRxB,EAAOyB,KAAK,eAAgB,CACxBN,GAAIrB,EACJS,YAEJC,EAAc,OAsBV,2BACIO,UAAU,cACVW,SApBU,SAAAJ,GAAK,OAC3Bd,EAAcc,EAAMK,OAAOC,QAoBfC,YAAY,0BACZC,KAAK,OACLF,MAAOrB,OChDZwB,EAFH,kBAAM,kBAAC,EAAD,OCElBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.07725879.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\nimport uuid from 'uuid/v4'\r\n\r\nconst myId = uuid()\r\nconst socket = io('http://localhost:8080')\r\nsocket.on('connect', () => console.log('[IO] Connect => A new connection has been established'))\r\n\r\nconst Chat = () => {\r\n    const [message, updateMessage] = useState('')\r\n    const [messages, updateMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        const handleNewMessage = newMessage =>\r\n            updateMessages([...messages, newMessage])\r\n        socket.on('chat.message', handleNewMessage)\r\n        return () => socket.off('chat.message', handleNewMessage)\r\n    }, [messages])\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault()\r\n        if (message.trim()) {\r\n            socket.emit('chat.message', {\r\n                id: myId,\r\n                message\r\n            })\r\n            updateMessage('')\r\n        }\r\n    }\r\n\r\n    const handleInputChange = event =>\r\n        updateMessage(event.target.value)\r\n\r\n    return (\r\n        <main className=\"container\">\r\n            <ul className=\"list\">\r\n                { messages.map((m, index) => (\r\n                    <li\r\n                        className={`list__item list__item--${m.id === myId ? 'mine' : 'other'}`}\r\n                        key={index}\r\n                    >\r\n                        <span className={`message message--${m.id === myId ? 'mine' : 'other'}`}>\r\n                            { m.message }\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <form className=\"form\" onSubmit={handleFormSubmit}>\r\n                <input\r\n                    className=\"form__field\"\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Type a new message here\"\r\n                    type=\"text\"\r\n                    value={message}\r\n                />\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport Chat from './Chat'\r\n\r\nconst App = () => <Chat/>\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}